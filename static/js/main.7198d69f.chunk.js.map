{"version":3,"sources":["p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h5/Header.module.css","p2-homeworks/h5/pages/Error404.module.css"],"names":["module","exports","Error404","className","style","error_page","title_404","title","Junior","JuniorPlus","PreJunior","PATH","Routes","path","exact","render","to","Header","onMouseOverNavBarReveal","nav_container","nav_bar","onMouseOver","nav_link","activeClassName","current","HW5","App","s","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0HACAA,EAAOC,QAAU,CAAC,IAAM,mB,4LCgBTC,MAdf,WACI,OACI,yBAAKC,UAAWC,IAAMC,YAClB,yBAAKF,UAAWC,IAAME,WAAtB,OACA,yBAAKH,UAAWC,IAAMG,OAAtB,4DACA,8EACiD,6BADjD,kCAE2C,6BAF3C,8DCGGC,MATf,WACI,OACI,qDCQOC,MATf,WACI,OACI,0DCMOC,MATf,WACI,OACI,yDCIKC,EACH,IADGA,EAEG,cAFHA,EAGD,UAHCA,EAII,eA4BFC,EAxBA,WACX,OACI,6BAEI,kBAAC,IAAD,KAIA,kBAAC,IAAD,CAAOC,KAAMF,EAAWG,OAAK,EAACC,OAAQ,kBAAM,kBAAC,IAAD,CAAUC,GAAIL,OAG1D,kBAAC,IAAD,CAAOE,KAAMF,EAAiBI,OAAQ,kBAAM,kBAAC,EAAD,SAC5C,kBAAC,IAAD,CAAOF,KAAMF,EAAaI,OAAQ,kBAAM,kBAAC,EAAD,SACxC,kBAAC,IAAD,CAAOF,KAAMF,EAAkBI,OAAQ,kBAAM,kBAAC,EAAD,SAT7C,gBAaA,kBAAC,IAAD,CAAOA,OAAQ,kBAAM,kBAAC,EAAD,Y,gBCXlBE,MAjBf,WAEI,IAAMC,EAA0B,aAIhC,OACI,yBAAKf,UAAWC,IAAMe,eACtB,yBAAKhB,UAAWC,IAAMgB,QAASC,YAAc,kBAAMH,IAC/C,kBAAC,IAAD,CAASF,GAAIL,EAAiBR,UAAWC,IAAMkB,SAAUC,gBAAiBnB,IAAMoB,SAAhF,cACA,kBAAC,IAAD,CAASR,GAAIL,EAAaR,UAAWC,IAAMkB,SAAUC,gBAAiBnB,IAAMoB,SAA5E,UACA,kBAAC,IAAD,CAASR,GAAIL,EAAkBR,UAAWC,IAAMkB,SAAUC,gBAAiBnB,IAAMoB,SAAjF,eCIGC,MAff,WACI,OACI,6BAEI,kBAAC,IAAD,KAEA,kBAAC,EAAD,MAEA,kBAAC,EAAD,SCMGC,MAdf,WACI,OACI,yBAAKvB,UAAWwB,IAAED,KAMd,kBAAC,EAAD,QCDQE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASlB,OACL,kBAAC,IAAMmB,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,SDiItB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,kBEhJ5B9C,EAAOC,QAAU,CAAC,QAAU,wBAAwB,cAAgB,8BAA8B,SAAW,yBAAyB,KAAO,qBAAqB,QAAU,0B,kBCA5KD,EAAOC,QAAU,CAAC,WAAa,6BAA6B,UAAY,4BAA4B,MAAQ,2B","file":"static/js/main.7198d69f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__we4Kl\"};","import React from 'react';\nimport style from './Error404.module.css'\n\nfunction Error404() {\n    return (\n        <div className={style.error_page}>\n            <div className={style.title_404}>404</div>\n            <div className={style.title}>UH OH! You're lost. ฅ/ᐠ.̫ .ᐟ\\ฅ</div>\n            <span>\n                The page you are looking for does not exist. <br />\n                        How you got here is a mystery! <br />\n                        But you can choose the section above and have fun there!\n                    </span>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from \"react\";\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            {/*<HW6/>*/}\r\n            This is Junior page\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Junior;\r\n","import React from \"react\";\r\n\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n            {/*<HW6/>*/}\r\n            This is Junior PLUS page\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JuniorPlus;\r\n","import React from \"react\";\n\nfunction PreJunior() {\n    return (\n        <div>\n            {/*<HW6/>*/}\n            This is Pre-Junior page\n        </div>\n    );\n}\n\nexport default PreJunior;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\";\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport Error404 from \"./pages/Error404\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\nimport PreJunior from \"./pages/PreJunior\";\n\n\nexport const PATH = {\n    HOME: '/',\n    PRE_JUNIOR: \"/pre-junior\",\n    JUNIOR: \"/junior\",\n    JUNIOR_PLUS: \"/junior-plus\"\n    // add paths\n}\n\nconst Routes = () => {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n            <Route path={PATH.HOME} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\n                // add routes\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { PATH } from \"./Routes\";\nimport style from './Header.module.css'\n\nfunction Header() {\n\n    const onMouseOverNavBarReveal = () => {\n\n    }\n\n    return (\n        <div className={style.nav_container}>\n        <div className={style.nav_bar} onMouseOver={ () => onMouseOverNavBarReveal}>\n            <NavLink to={PATH.PRE_JUNIOR} className={style.nav_link} activeClassName={style.current}>Pre-Junior</NavLink>\n            <NavLink to={PATH.JUNIOR} className={style.nav_link} activeClassName={style.current}>Junior</NavLink>\n            <NavLink to={PATH.JUNIOR_PLUS} className={style.nav_link} activeClassName={style.current}>Junior +</NavLink>\n        </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\nimport s from \"./App.module.css\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            {/* <div>react homeworks:</div> */}\n            {/* <HW1/> */}\n            {/* <HW2/> */}\n            {/* <HW3/> */}\n            {/* <HW4/> */}\n            <HW5 />\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_bar\":\"Header_nav_bar__1YUPs\",\"nav_container\":\"Header_nav_container__1uSjw\",\"nav_link\":\"Header_nav_link__9HOb3\",\"fill\":\"Header_fill__q8Ydd\",\"current\":\"Header_current__lnb7W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_page\":\"Error404_error_page__1Jk5a\",\"title_404\":\"Error404_title_404__3gYvX\",\"title\":\"Error404_title__20KwC\"};"],"sourceRoot":""}