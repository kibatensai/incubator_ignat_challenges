{"version":3,"sources":["p2-homeworks/h5/Header.module.css","p2-homeworks/h5/pages/Error404.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h6/HW6.module.css","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Error404","className","style","error_page","title_404","title","Junior","JuniorPlus","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","superInput","input_container","e","currentTarget","value","key","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","children","onDoubleClick","restSpanProps","span_styling","pClassName","p_styling","SuperButton","red","finalClassName","default","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","hw6_styling","undefined","onClick","restoredData","PreJunior","PATH","Routes","path","exact","render","to","Header","onMouseOverNavBarReveal","nav_container","nav_bar","onMouseOver","nav_link","activeClassName","current","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.278ecf52.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_bar\":\"Header_nav_bar__1YUPs\",\"nav_container\":\"Header_nav_container__1uSjw\",\"nav_link\":\"Header_nav_link__9HOb3\",\"fill\":\"Header_fill__q8Ydd\",\"current\":\"Header_current__lnb7W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error_page\":\"Error404_error_page__1Jk5a\",\"title_404\":\"Error404_title_404__3gYvX\",\"title\":\"Error404_title__20KwC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_container\":\"SuperInputText_input_container__P1nWd\",\"superInput\":\"SuperInputText_superInput__3jvqN\",\"errorInput\":\"SuperInputText_errorInput__zIeeH\",\"error\":\"SuperInputText_error__2zVMy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"p_styling\":\"SuperEditableSpan_p_styling__gOwII\",\"span_styling\":\"SuperEditableSpan_span_styling__3ka1G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__353jw\",\"red\":\"SuperButton_red__z9qYi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__we4Kl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hw6_styling\":\"HW6_hw6_styling__1WDNC\"};","import React from 'react';\nimport style from './Error404.module.css'\n\nfunction Error404() {\n    return (\n        <div className={style.error_page}>\n            <div className={style.title_404}>404</div>\n            <div className={style.title}>UH OH! You're lost. ฅ/ᐠ.̫ .ᐟ\\ฅ</div>\n            <span>\n                The page you are looking for does not exist. <br />\n                        How you got here is a mystery! <br />\n                        But you can choose the section above and have fun there!\n                    </span>\n        </div>\n    );\n}\n\nexport default Error404;\n","import React from \"react\";\r\n\r\nfunction Junior() {\r\n    return (\r\n        <div>\r\n            {/*<HW6/>*/}\r\n            This is Junior page\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Junior;\r\n","import React from \"react\";\r\n\r\n\r\nfunction JuniorPlus() {\r\n    return (\r\n        <div>\r\n            {/*<HW6/>*/}\r\n            This is Junior PLUS page\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default JuniorPlus;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${error ? '' : s.superInput}`; // need to fix with (?:) and s.superInput\n\n    return (\n        <div className={s.input_container}>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </div>\n    );\n}\n\nexport default SuperInputText;\n","import React, { DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState, KeyboardEvent } from \"react\";\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\nimport style from './SuperEditableSpan.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const { children, onDoubleClick, className, ...restSpanProps } = spanProps || {};\n\n    const onEnterCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter') {\n            setEditMode(false);\n        }\n        // выключить editMode при нажатии Enter\n\n        onEnter && onEnter();\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\n\n        onBlur && onBlur(e);\n    };\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true); // включить editMode при двойном клике\n\n        onDoubleClick && onDoubleClick(e);\n    };\n\n    const spanClassName = `${style.span_styling} ${className}`;\n    const pClassName = `${style.p_styling} ${className}`\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInputText\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onKeyPress={onEnterCallback}\n\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        <p\n                          className={pClassName}>\n                            {children || restProps.value}\n                        </p>\n                    </span>\n                )\n            }\n        </>\n    );\n}\n\nexport default SuperEditableSpan;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","// вот вам функция для сохранения объектов в память браузера\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\nexport function saveState<T>(key: string, state: T) {\n    const stateAsString = JSON.stringify(state);\n    localStorage.setItem(key, stateAsString)\n}\n\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\nexport function restoreState<T>(key: string, defaultState: T) {\n    const stateAsString = localStorage.getItem(key);\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\n    return defaultState;\n}\n\n// ---------------------------------------------------------------------------------------------------------------\n// использование:\ntype StateType = {\n    x: string\n    y: number\n}\n\n// сохраняем объект типа StateType в ячейке \"test\"\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\n\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\n","import React, {useState} from \"react\";\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\nimport style from './HW6.module.css'\n\nfunction HW6() {\n    const [value, setValue] = useState<string>(\"\");\n\n    const save = () => {\n        saveState<string>(\"editable-span-value\", value);\n    };\n    const restore = () => {\n        let restoredData = restoreState<string>('editable-span-value', value)\n        setValue(restoredData);\n    };\n\n    return (\n        <div className={style.hw6_styling}>\n            <hr/>\n\n            {/*should work (должно работать)*/}\n            <div>\n                <SuperEditableSpan\n                    value={value}\n                    onChangeText={setValue}\n                    spanProps={{children: value ? undefined : \"click me...\"}}\n                />\n            </div>\n            <div>\n            \n            <SuperButton onClick={save}>save</SuperButton>\n            <SuperButton onClick={restore}>restore</SuperButton>\n            </div>\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativeSuperEditableSpan/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW6;\n","import React from \"react\";\nimport HW6 from '../../h6/HW6'\n\nfunction PreJunior() {\n    return (\n        <div>\n            <HW6/>\n        </div>\n    );\n}\n\nexport default PreJunior;\n\n// сделайте по аналогии пустые страницы джун и джун+\n// туда будут добавляться следующие дз","import React from \"react\";\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport Error404 from \"./pages/Error404\";\nimport Junior from \"./pages/Junior\";\nimport JuniorPlus from \"./pages/JuniorPlus\";\nimport PreJunior from \"./pages/PreJunior\";\n\n\nexport const PATH = {\n    HOME: '/',\n    PRE_JUNIOR: \"/pre-junior\",\n    JUNIOR: \"/junior\",\n    JUNIOR_PLUS: \"/junior-plus\"\n    // add paths\n}\n\nconst Routes = () => {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            <Switch>\n\n            {/*в начале мы попадаем на страницу \"/\" и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после \"/\" ничего не будет)*/}\n            <Route path={PATH.HOME} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\n\n\n            <Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\n            <Route path={PATH.JUNIOR} render={() => <Junior/>}/>\n            <Route path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\n                // add routes\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            <Route render={() => <Error404/>}/>\n\n            </Switch>\n        </div>\n    );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { PATH } from \"./Routes\";\nimport style from './Header.module.css'\n\nfunction Header() {\n\n    const onMouseOverNavBarReveal = () => {\n\n    }\n\n    return (\n        <div className={style.nav_container}>\n        <div className={style.nav_bar} onMouseOver={ () => onMouseOverNavBarReveal}>\n            <NavLink to={PATH.PRE_JUNIOR} className={style.nav_link} activeClassName={style.current}>Pre-Junior</NavLink>\n            <NavLink to={PATH.JUNIOR} className={style.nav_link} activeClassName={style.current}>Junior</NavLink>\n            <NavLink to={PATH.JUNIOR_PLUS} className={style.nav_link} activeClassName={style.current}>Junior +</NavLink>\n        </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { HashRouter } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Routes from \"./Routes\";\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            <HashRouter>\n\n            <Header/>\n\n            <Routes/>\n\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default HW5;\n","import React from \"react\";\nimport s from \"./App.module.css\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\n\nfunction App() {\n    return (\n        <div className={s.App}>\n            {/* <div>react homeworks:</div> */}\n            {/* <HW1/> */}\n            {/* <HW2/> */}\n            {/* <HW3/> */}\n            {/* <HW4/> */}\n            <HW5 />\n\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./p1-main/m1-ui/u1-app/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}